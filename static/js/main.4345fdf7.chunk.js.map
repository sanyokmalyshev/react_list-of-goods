{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","sortByALPABET","setState","ALPABET","sortByLength","LENGTH","reverseList","reset","this","visible","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAgBE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAENK,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,IAAK,WACH,OAAOM,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITV,GACFK,EAAaM,UAGRN,GA3BX,EA8BEO,cAAgB,WACd,EAAKC,SAAS,CAAEZ,SAAUL,EAASkB,WA/BvC,EAkCEC,aAAe,WACb,EAAKF,SAAS,CAAEZ,SAAUL,EAASoB,UAnCvC,EAsCEC,YAAc,WACZ,IAAQjB,EAAe,EAAKD,MAApBC,WAER,EAAKa,SAAS,CAAEb,YAAaA,KAzCjC,EA4CEkB,MAAQ,WACN,EAAKL,SAAS,CACZb,YAAY,EACZC,SAAUL,EAASM,QA/CzB,4CAmDE,WACE,MAAiCiB,KAAKpB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdmB,EAAUD,KAAKhB,kBACnBN,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,aAAbpB,GAA2B,YACxDsB,QAASJ,KAAKP,cAHhB,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAoC,WAAbpB,GAAyB,YACzDsB,QAASJ,KAAKJ,aAHhB,4BAQA,wBACEO,KAAK,SACLD,UAAS,6BAAwBrB,GAAc,YAC/CuB,QAASJ,KAAKF,YAHhB,qBAQe,SAAbhB,GAAuBD,EAErB,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASJ,KAAKD,MAHhB,mBAQA,MAGN,6BACGE,EAAQI,KAAI,SAAAC,GAAI,OACf,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAtGnB,GAAyBC,IAAMC,WC9B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4345fdf7.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case 'alphabet':\n          return a.localeCompare(b);\n        case 'length':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  sortByALPABET = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseList = () => {\n    const { isReversed } = this.state;\n\n    this.setState({ isReversed: !isReversed });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visible = this.getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== 'alphabet' && 'is-light'}`}\n            onClick={this.sortByALPABET}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== 'length' && 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== 'none' || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n            : ''}\n        </div>\n\n        <ul>\n          {visible.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}